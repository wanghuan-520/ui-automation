用例编号,用例名称,模块/功能,优先级,用例类型,前置条件,测试数据/参数,测试步骤,预期结果
CRED-001,验证余额显示测试,Credits显示,P0,功能测试,"准备工作:
* 环境准备
  - 测试环境已就绪
  - 数据库连接正常
* 账户准备
  - 测试账户已创建
  - Credits余额充足
* 权限要求
  - 普通用户权限","数据类型: 有效等价类
* 输入数据
  - Credits余额: [0, 99999]
  - 用户状态: {普通, 订阅}
* 验证数据
  - 显示格式: 整数
  - 刷新间隔: 实时
* 测试工具
  - 浏览器: Chrome/Firefox/Safari","1. 访问系统首页
   * 操作: 打开首页
   * 检查: 右上角Credits显示
   * 记录: 当前显示值

2. 切换到对话页面
   * 操作: 点击对话入口
   * 检查: 中央Credits显示
   * 记录: 显示数值

3. 验证订阅状态显示
   * 操作: 切换订阅状态
   * 检查: Badge显示
   * 验证: Credits隐藏","1. 首页显示
   * Credits数值正确显示
   * 格式符合规范
   * 位置正确(右上角)

2. 对话页显示
   * 非订阅用户显示Credits
   * 订阅用户显示GodGPT
   * 位置居中正确

3. 订阅状态
   * Badge正确显示
   * Credits正确隐藏
   * 切换即时生效"
CRED-002,新用户额度测试,Credits初始化,P0,功能测试,"准备工作:
* 环境准备
  - 测试数据已清理
  - 注册功能可用
* 数据准备
  - 测试账号未使用
  - 初始化脚本就绪
* 监控准备
  - 日志记录开启
  - 数据监控就绪","数据类型: 有效等价类
* 注册数据
  - 用户名: [6-20字符]
  - 密码: [8-20字符]
* 初始额度
  - Credits值: 320
  - 有效期: 永久
* 验证工具
  - 数据库查询工具
  - 监控面板","1. 执行注册流程
   * 操作: 填写注册信息
   * 提交: 创建账户
   * 检查: 注册结果

2. 验证初始额度
   * 查看: Credits显示
   * 检查: 数据库记录
   * 验证: 额度正确性

3. 执行登出登录
   * 操作: 退出系统
   * 操作: 重新登录
   * 检查: 额度保持","1. 注册验证
   * 账户创建成功
   * 无报错信息
   * 跳转正确

2. 额度验证
   * 显示320 Credits
   * 数据库记录正确
   * 额度状态有效

3. 稳定性验证
   * 登出登录正常
   * 额度保持不变
   * 数据一致性好"
CRED-003,Credits消耗测试,Credits扣除,P0,功能测试,"准备工作:
* 环境准备
  - 测试环境已就绪
  - 消息队列正常
* 账户准备
  - Credits余额 > 10
  - 账户状态正常
* 监控准备
  - 交易日志开启
  - 实时监控就绪","数据类型: 有效等价类
* 交易数据
  - 单次消耗: 10 Credits
  - 余额阈值: >0
* 监控数据
  - 交易延迟: [0, 500ms]
  - 同步延迟: [0, 1s]
* 测试工具
  - 性能监控工具
  - 日志分析工具","1. 记录初始状态
   * 操作: 获取当前余额
   * 记录: 时间戳
   * 检查: 账户状态

2. 执行对话操作
   * 操作: 发送对话请求
   * 检查: 实时扣费状态
   * 记录: 交易延迟

3. 验证三端同步
   * 检查: Web端显示
   * 检查: 移动端显示
   * 检查: 数据库记录","1. 初始状态
   * 余额记录正确
   * 账户状态正常
   * 系统响应及时

2. 扣费验证
   * 准确扣除10 Credits
   * 延迟小于500ms
   * 交易记录完整

3. 同步验证
   * 三端数据一致
   * 同步延迟<1s
   * 网络延迟提示正确"
CRED-004,消息限制测试,使用限制,P0,功能测试,"准备工作:
* 环境准备
  - 时间同步正确
  - 限制器配置就绪
* 账户准备
  - 非订阅用户
  - 消息计数清零
* 监控准备
  - 限制日志开启
  - 计数器监控开启","数据类型: 边界值
* 限制规则
  - 非订阅: 25令牌/3小时
  - 订阅: 100令牌/3小时
* 测试数据
  - 消息频率: [1条/分钟]
  - 消息大小: [100-1000字节]
* 监控指标
  - 计数准确性
  - 重置及时性","1. 发送消息序列
   * 操作: 连续发送消息
   * 记录: 发送时间戳
   * 检查: 限制触发点

2. 验证限制提示
   * 检查: 提示信息
   * 验证: 提示时机
   * 记录: 限制状态

3. 等待重置验证
   * 等待: 3小时
   * 检查: 限制解除
   * 验证: 功能恢复","1. 消息发送
   * 非订阅用户限制25条
   * 订阅用户限制100条
   * 计数准确无误

2. 限制提示
   * 提示信息正确
   * 及时阻止超限
   * 用户体验友好

3. 限制解除
   * 准时重置计数
   * 功能正常恢复
   * 无残留限制"
CRED-005,Credits耗尽测试,余额限制,P0,功能测试,"准备工作:
* 环境准备
  - 测试环境就绪
  - 监控系统正常
* 账户准备
  - Credits余额 = 10
  - 非订阅状态
* 系统准备
  - 错误处理就绪
  - 提示配置完成","数据类型: 边界值
* 测试数据
  - 初始Credits: 10
  - 消耗Credits: 10
* 验证数据
  - 余额检查: [0, 10]
  - 状态转换: {正常, 耗尽}
* 提示信息
  - 英文: ""You've run out of credits.""
  - 显示时机: 即时","1. 执行耗尽操作
   * 操作: 发起对话
   * 检查: Credits扣除
   * 验证: 余额状态

2. 验证系统提示
   * 检查: 提示内容
   * 验证: 提示时机
   * 记录: 用户反馈

3. 尝试继续使用
   * 操作: 发起新对话
   * 检查: 系统响应
   * 验证: 功能限制","1. 余额耗尽
   * Credits正确扣除
   * 余额显示为0
   * 状态更新及时

2. 提示验证
   * 提示文案正确
   * 显示时机准确
   * 提示样式合适

3. 功能限制
   * 无法发起对话
   * 提示引导充值
   * 用户体验友好" 