---
description: 
globs: 
alwaysApply: false
---
输出"!!!进入测试用例设计流程!!!"

## 基础环境要求
- 执行环境
  * Playwright (最新稳定版)
  * Node.js >= 14.0.0
  * 支持: Chromium/Firefox/WebKit
- 网络要求
  * 稳定连接，延迟 < 100ms
  * 支持跨环境访问

## 闭环测试流程（AI增强版）
### 1. 核心流程定义
```mermaid
graph TD
    A[CSV输入]:::input --> B{MCP动态录制}
    B --> C[生成基础脚本]
    C --> D[AI静态分析]
    D --> E[测试验证]
    E -- 脚本报错 --> F[MCP重新录制]
    E -- 用例失败 --> G[AI根因分析]
    F --> H[增量更新脚本]
    G --> I[修正测试数据] 
    H --> E
    I --> E
    E -- 全部通过 --> J[版本化入库]
    J --> K[强化AI模型]

    classDef input fill:#f9f,stroke:#333;
```

### 2. 节点说明
| 节点 | 类型       | 说明                  |
|------|------------|----------------------|
| A    | 数据输入   | CSV格式的测试用例     |
| B    | 录制引擎   | 多浏览器并行录制      |
| G    | AI诊断     | 自动分析失败根本原因  |

### 2. 流程阶段说明
- 执行测试用例
  * 基于测试计划执行
  * 记录执行环境
  * 收集前置条件
- MCP执行录制
  * 实时操作记录
  * 步骤序列化
  * 行为分析
- 生成初始脚本
  * 基础代码生成
  * 参数提取
  * 断言生成
- AI分析优化
  * 代码质量分析
  * 性能优化建议
  * 可维护性增强
- 执行验证
  * 自动化回放
  * 结果对比
  * 稳定性评估
- AI修正脚本
  * 错误分析
  * 智能修复
  * 验证确认
- 加入测试库
  * 版本管理
  * 文档生成
  * 依赖分析
- 反馈训练AI模型
  * 成功案例学习
  * 失败经验总结
  * 持续优化

## 测试执行规范
### 1. 结果管理
- 目录结构
  * test-cases/{project}/{version}/
  * test-results/{timestamp}-test-run/
  * attachments/(screenshots|videos|logs)/
- 输出格式
  * 测试结果: test-cases.json
  * 环境信息: environment.json
  * 执行记录: history.json
  * HTML报告: report/

### 2. 资源记录规范
- 截图要求
  * 关键步骤和错误时截图
  * 命名: {case_id}_{step}_{timestamp}.png
  * 保留最近30天
- 视频录制
  * 1920x1080@30fps, MP4格式
  * 失败用例永久保存
- 日志记录
  * JSON格式，UTC时间
  * 分级: INFO/WARN/ERROR/DEBUG
  * 按天切割，保留30天

### 3. MCP 录制规范
- 基本要求
  * 强制开启录制功能
  * 完整步骤和断言
  * 使用显式等待
- 脚本管理
  * 路径: test-script/recorded
  * 命名: {case_id}_{timestamp}.ts
  * 按模块分类存储
- 质量控制
  * 中文注释
  * 错误处理
  * 回放验证

### 4. 执行控制
- 用例管理
  * 环境准备和清理
  * 数据隔离
  * 状态重置
- 稳定性保障
  * 重试机制（最大3次）
  * 超时控制
  * 并发管理（1-5）

### 5. 质量保证
- 脚本标准
  * 代码规范遵循
  * 注释完整性
  * 可维护性要求
- 执行标准
  * 稳定性要求
  * 性能基线
  * 资源消耗限制
- AI优化标准
  * 优化目标明确
  * 修改可追溯
  * 效果可量化

### 6. 数据管理
- 执行数据
  * 操作序列
  * 环境快照
  * 结果记录
- 训练数据
  * 成功样本
  * 失败案例
  * 优化记录
- 反馈数据
  * 性能指标
  * 稳定性数据
  * 维护成本

## 持续集成
- 触发机制
  * 代码提交
  * 每日定时
  * 手动触发
- 结果通知
  * 即时失败通知
  * 日报统计
  * 趋势分析

## 维护要求
- 定期更新规范
- 执行情况纳入考核
- 保持向下兼容

## 备注
- 具体配置参数见配置文件
- 项目可基于此规范扩展 